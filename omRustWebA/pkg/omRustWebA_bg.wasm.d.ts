/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function get_chemical_database_as_json(a: number): void;
export function calculate_pH_compounds_json(a: number, b: number, c: number, d: number, e: number): void;
export function calculate_pH_compounds_changed_conc_json(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function calculate_pH_compounds_json_db(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function calculate_composition_common_buffer_target_pH_json(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function calculate_composition_common_buffer_target_pH_json_db(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function calculate_concentration_change_json(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function __wbg_ion_free(a: number): void;
export function ion_new(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function __wbg_compound_free(a: number): void;
export function compound_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function compound_ion_position(a: number, b: number, c: number): void;
export function __wbg_buffer_common_ion_parameters_free(a: number): void;
export function __wbg_solution_free(a: number): void;
export function solution_new(): number;
export function solution_calculate_conc_change_one_compound_conc_target_pH(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function solution_get_common_ion_buffer_parameters(a: number, b: number, c: number): number;
export function solution_calculate_concentration_change(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function solution_non_salt_compound_ids(a: number, b: number): void;
export function solution_get_compound_by_id(a: number, b: number): number;
export function solution_get_ion_by_id(a: number, b: number): number;
export function solution_get_salt_compound_ids(a: number, b: number): void;
export function solution_get_buffer_compound_ids(a: number, b: number): void;
export function solution_set_compound_conc_target_buffer_ion_conc(a: number, b: number, c: number): void;
export function solution_add_comp(a: number, b: number, c: number, d: number, e: number): void;
export function solution_set_conc_by_name(a: number, b: number, c: number, d: number, e: number): void;
export function solution_set_init_comp_conc(a: number, b: number, c: number): void;
export function solution_change_comp_conc(a: number, b: number, c: number): void;
export function solution_add_comp_conc(a: number, b: number, c: number): void;
export function solution_ion_concs_unique_ions(a: number, b: number): number;
export function solution_calculate_single_compound_conc_target_pH(a: number, b: number, c: number, d: number, e: number): void;
export function solution_calculate_composition_common_buffer_target_pH(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function solution_calculate_pH_compounds(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function solution_calculate_pH_compounds_changed_conc(a: number, b: number, c: number, d: number, e: number): number;
export function solution_calculate_compound_conc_common_buffer_ion(a: number, b: number, c: number, d: number): void;
export function __wbg_chemicaldatabase_free(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
